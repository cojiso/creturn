// Generated by wxt
import "wxt/browser";

declare module "wxt/browser" {
  /**
   * See https://developer.chrome.com/docs/extensions/reference/i18n/#method-getMessage
   */
  interface GetMessageOptions {
    /**
     * See https://developer.chrome.com/docs/extensions/reference/i18n/#method-getMessage
     */
    escapeLt?: boolean
  }

  export interface WxtI18n extends I18n.Static {
    /**
     * The extension or app ID; you might use this string to construct URLs for resources inside the extension. Even unlocalized extensions can use this message.
     * Note: You can't use this message in a manifest file.
     *
     * "<browser.runtime.id>"
     */
    getMessage(
      messageName: "@@extension_id",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "<browser.i18n.getUiLocale()>"
     */
    getMessage(
      messageName: "@@ui_locale",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * The text direction for the current locale, either "ltr" for left-to-right languages such as English or "rtl" for right-to-left languages such as Japanese.
     *
     * "<ltr|rtl>"
     */
    getMessage(
      messageName: "@@bidi_dir",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * If the @@bidi_dir is "ltr", then this is "rtl"; otherwise, it's "ltr".
     *
     * "<rtl|ltr>"
     */
    getMessage(
      messageName: "@@bidi_reversed_dir",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * If the @@bidi_dir is "ltr", then this is "left"; otherwise, it's "right".
     *
     * "<left|right>"
     */
    getMessage(
      messageName: "@@bidi_start_edge",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * If the @@bidi_dir is "ltr", then this is "right"; otherwise, it's "left".
     *
     * "<right|left>"
     */
    getMessage(
      messageName: "@@bidi_end_edge",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Extension name
     *
     * "cReturn"
     */
    getMessage(
      messageName: "extensionName",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Extension description
     *
     * "Enter for line breaks, Ctrl+Enter to send on any site. Custom configs supported. Prevents accidental text conversion sends."
     */
    getMessage(
      messageName: "extensionDescription",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Message shown when domain is not supported
     *
     * "Unsupported domain."
     */
    getMessage(
      messageName: "unsupportedDomain",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Settings button text
     *
     * "Settings"
     */
    getMessage(
      messageName: "settings",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Configuration file section title
     *
     * "Configuration File"
     */
    getMessage(
      messageName: "configFile",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Option to use default configuration
     *
     * "Use Default Configuration (Stable)"
     */
    getMessage(
      messageName: "useDefaultConfig",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Option to use latest default configuration
     *
     * "Use Default Configuration (Latest)"
     */
    getMessage(
      messageName: "useDefaultLatestConfig",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Option to use GitHub configuration
     *
     * "Use GitHub Configuration"
     */
    getMessage(
      messageName: "useGithubConfig",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Load button text
     *
     * "Load"
     */
    getMessage(
      messageName: "load",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Loading indicator text
     *
     * "Loading..."
     */
    getMessage(
      messageName: "loading",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Supported services section title
     *
     * "Supported Services"
     */
    getMessage(
      messageName: "supportedServices",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Message shown when no services are configured
     *
     * "No services configured."
     */
    getMessage(
      messageName: "noServices",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Selector information
     *
     * "Selector: $SELECTORS$"
     */
    getMessage(
      messageName: "selector",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Reset to defaults button text
     *
     * "Reset to defaults"
     */
    getMessage(
      messageName: "resetToDefaults",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Confirmation message for reset
     *
     * "Are you sure you want to reset all settings to their default values?"
     */
    getMessage(
      messageName: "confirmReset",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Success message for settings reset
     *
     * "Settings have been reset to default values"
     */
    getMessage(
      messageName: "settingsResetSuccess",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Error message for settings reset
     *
     * "Failed to reset settings"
     */
    getMessage(
      messageName: "settingsResetError",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Message shown when URL is empty
     *
     * "Please enter URL"
     */
    getMessage(
      messageName: "enterUrl",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Message shown when loading settings
     *
     * "Loading settings..."
     */
    getMessage(
      messageName: "loadingSettings",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Error message for loading settings
     *
     * "Error: $ERROR$"
     */
    getMessage(
      messageName: "loadingError",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Success message for loading settings
     *
     * "Settings loaded and saved successfully"
     */
    getMessage(
      messageName: "settingsLoaded",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Success message for saving settings
     *
     * "Service settings saved"
     */
    getMessage(
      messageName: "settingsSaved",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Success message for applying default settings
     *
     * "Default settings applied"
     */
    getMessage(
      messageName: "defaultSettingsApplied",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Message to remind user to load settings
     *
     * "Click 'Load' to apply settings"
     */
    getMessage(
      messageName: "clickToLoad",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Warning about unsaved changes
     *
     * "Changes are not saved"
     */
    getMessage(
      messageName: "unsavedChanges",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * Settings page title
     *
     * "Settings"
     */
    getMessage(
      messageName: "options",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    getMessage(
      messageName: "@@extension_id" | "@@ui_locale" | "@@bidi_dir" | "@@bidi_reversed_dir" | "@@bidi_start_edge" | "@@bidi_end_edge" | "extensionName" | "extensionDescription" | "unsupportedDomain" | "settings" | "configFile" | "useDefaultConfig" | "useDefaultLatestConfig" | "useGithubConfig" | "load" | "loading" | "supportedServices" | "noServices" | "selector" | "resetToDefaults" | "confirmReset" | "settingsResetSuccess" | "settingsResetError" | "enterUrl" | "loadingSettings" | "loadingError" | "settingsLoaded" | "settingsSaved" | "defaultSettingsApplied" | "clickToLoad" | "unsavedChanges" | "options",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
  }
}
